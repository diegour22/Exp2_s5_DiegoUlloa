package cl.duoc.inventario.app;

import cl.duoc.inventario.modelo.Inventario;
import cl.duoc.inventario.modelo.Producto;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

/**
 * Clase principal con men√∫ de interacci√≥n con el usuario
 */
public class MenuPrincipal {

    private static Inventario inventario = new Inventario();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int opcion = -1;

        do {
            mostrarMenu();
            try {
                opcion = scanner.nextInt();
                scanner.nextLine(); // limpiar buffer

                switch (opcion) {
                    case 1 -> agregarProducto();
                    case 2 -> eliminarProducto();
                    case 3 -> actualizarProducto();
                    case 4 -> buscarProductoPorCodigo();
                    case 5 -> listarProductos();
                    case 6 -> generarReporte();
                    case 0 -> System.out.println("üëã Saliendo del sistema...");
                    default -> System.out.println("‚ö†Ô∏è Opci√≥n inv√°lida. Intente nuevamente.");
                }

            } catch (InputMismatchException e) {
                System.out.println("‚ö†Ô∏è Error: Debe ingresar un n√∫mero v√°lido.");
                scanner.nextLine(); // limpiar entrada incorrecta
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è Error: " + e.getMessage());
            }

        } while (opcion != 0);
    }

    private static void mostrarMenu() {
        System.out.println("\n===== üìã Men√∫ Principal =====");
        System.out.println("1Ô∏è‚É£ Agregar producto");
        System.out.println("2Ô∏è‚É£ Eliminar producto");
        System.out.println("3Ô∏è‚É£ Actualizar producto");
        System.out.println("4Ô∏è‚É£ Buscar producto por c√≥digo");
        System.out.println("5Ô∏è‚É£ Listar todos los productos");
        System.out.println("6Ô∏è‚É£ Generar reporte estad√≠stico");
        System.out.println("0Ô∏è‚É£ Salir");
        System.out.print("Seleccione una opci√≥n: ");
    }

    private static void agregarProducto() {
        try {
            System.out.print("Ingrese c√≥digo: ");
            String codigo = scanner.nextLine();
            System.out.print("Ingrese nombre: ");
            String nombre = scanner.nextLine();
            System.out.print("Ingrese descripci√≥n: ");
            String descripcion = scanner.nextLine();
            System.out.print("Ingrese precio: ");
            double precio = scanner.nextDouble();
            System.out.print("Ingrese stock: ");
            int stock = scanner.nextInt();
            scanner.nextLine(); // limpiar buffer

            Producto producto = new Producto(codigo, nombre, descripcion, precio, stock);
            inventario.agregarProducto(producto);

            System.out.println("‚úÖ Producto agregado correctamente.");
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è Error al agregar producto: " + e.getMessage());
            scanner.nextLine(); // limpiar si qued√≥ algo mal
        }
    }

    private static void eliminarProducto() {
        System.out.print("Ingrese c√≥digo del producto a eliminar: ");
        String codigo = scanner.nextLine();

        if (inventario.eliminarProducto(codigo)) {
            System.out.println("üóëÔ∏è Producto eliminado correctamente.");
        } else {
            System.out.println("‚ö†Ô∏è No se encontr√≥ un producto con ese c√≥digo.");
        }
    }

    private static void actualizarProducto() {
        System.out.print("Ingrese c√≥digo del producto a actualizar: ");
        String codigo = scanner.nextLine();

        System.out.print("Nuevo nombre (dejar vac√≠o para no cambiar): ");
        String nuevoNombre = scanner.nextLine();

        System.out.print("Nuevo precio (ingrese -1 para no cambiar): ");
        double nuevoPrecio = scanner.nextDouble();

        System.out.print("Nuevo stock (ingrese -1 para no cambiar): ");
        int nuevoStock = scanner.nextInt();
        scanner.nextLine();

        boolean actualizado = inventario.actualizarProducto(
                codigo,
                nuevoNombre.isBlank() ? null : nuevoNombre,
                nuevoPrecio >= 0 ? nuevoPrecio : -1,
                nuevoStock >= 0 ? nuevoStock : -1
        );

        if (actualizado) {
            System.out.println("‚úÖ Producto actualizado correctamente.");
        } else {
            System.out.println("‚ö†Ô∏è No se encontr√≥ un producto con ese c√≥digo.");
        }
    }

    private static void buscarProductoPorCodigo() {
        System.out.print("Ingrese c√≥digo del producto: ");
        String codigo = scanner.nextLine();

        Producto producto = inventario.buscarPorCodigo(codigo);
        if (producto != null) {
            System.out.println("üîç Producto encontrado: " + producto);
        } else {
            System.out.println("‚ö†Ô∏è No se encontr√≥ un producto con ese c√≥digo.");
        }
    }

    private static void listarProductos() {
        List<Producto> lista = inventario.listarProductos();
        if (lista.isEmpty()) {
            System.out.println("üì¶ No hay productos en el inventario.");
        } else {
            System.out.println("===== üì¶ Lista de productos =====");
            for (Producto p : lista) {
                System.out.println(p);
            }
        }
    }

    private static void generarReporte() {
        inventario.generarReporteEstadistico();
    }
}
